name: Release

on:
  push:
    branches: [main]

env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.11]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Setup npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        shell: bash
        run: pnpm install

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: .turbo
          key: turbo-cache-${{ github.run_id }}-${{ github.run_attempt }}
          restore-keys: |
            turbo-cache-

      - name: Build packages
        run: pnpm build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        # with:
        #   # This expects you to have a script called release which does a build for your packages and calls changeset publish
        #   version: pnpm ci:version
        #   commit: 'chore: release package(s)'
        #   title: 'chore: release package(s)'
        #   publish: pnpm ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Send a Slack notification if a publish happens
        if: steps.changesets.outputs.published == 'true'
        # You can do something when a publish happens.
        run: my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"
